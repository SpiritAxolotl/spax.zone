@function str-permutations($string) {
  $result: ();
  $has-underscore: str-index($string, "_");
  
  @if not $has-underscore {
    @return ($string,);
  }
  
  $dash-permutation: $string;
  $underscore-permutation: $string;
  $no-separator-permutation: $string;
  
  $dash-permutation: str-replace-all($dash-permutation, "_", "-");
  
  $underscore-permutation: str-replace-all($underscore-permutation, "-", "_");
  
  $no-separator-permutation: str-replace-all($no-separator-permutation, "-", "");
  $no-separator-permutation: str-replace-all($no-separator-permutation, "_", "");
  
  $result: append($result, $dash-permutation);
  
  @if $dash-permutation != $underscore-permutation {
    $result: append($result, $underscore-permutation);
  }
  
  @if $no-separator-permutation != $dash-permutation and $no-separator-permutation != $underscore-permutation {
    $result: append($result, $no-separator-permutation);
  }
  
  @return $result;
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}

@function str-replace-all($string, $search, $replace: "") {
  $result: $string;
  @while str-index($result, $search) {
    $result: str-replace($result, $search, $replace);
  }
  @return $result;
}